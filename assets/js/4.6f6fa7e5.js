(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{400:function(t,s,a){t.exports=a.p+"assets/img/browser.6d135180.jpg"},401:function(t,s,a){t.exports=a.p+"assets/img/network.22a4624e.jpg"},402:function(t,s,a){t.exports=a.p+"assets/img/property.f02b4d8d.jpg"},403:function(t,s,a){t.exports=a.p+"assets/img/vary.d4580a3f.jpg"},433:function(t,s,a){"use strict";a.r(s);var _=a(56),r=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1-性能优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-性能优化"}},[t._v("#")]),t._v(" 1)性能优化")]),t._v(" "),_("h4",{attrs:{id:"为什么要进行性能优化呢-因为对于一个产品来说-用户的体验是最重要的。当页面加载时间过长、交互操作不流畅时-会给用户带来很糟糕的体验-最坏的情况下会导致用户的流失-到最后还会出现-代码写得好看又怎样-产品还不是一样难用-的情况。正因为如此-在各种技术优化的解决方案中-性能优化出现的频率最高、优先级也常常是更高的。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进行性能优化呢-因为对于一个产品来说-用户的体验是最重要的。当页面加载时间过长、交互操作不流畅时-会给用户带来很糟糕的体验-最坏的情况下会导致用户的流失-到最后还会出现-代码写得好看又怎样-产品还不是一样难用-的情况。正因为如此-在各种技术优化的解决方案中-性能优化出现的频率最高、优先级也常常是更高的。"}},[t._v("#")]),t._v(" 为什么要进行性能优化呢？因为对于一个产品来说，用户的体验是最重要的。当页面加载时间过长、交互操作不流畅时，会给用户带来很糟糕的体验，最坏的情况下会导致用户的流失，到最后还会出现“代码写得好看又怎样，产品还不是一样难用”的情况。正因为如此，在各种技术优化的解决方案中，性能优化出现的频率最高、优先级也常常是更高的。")]),t._v(" "),_("h4",{attrs:{id:"常见的性能优化方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见的性能优化方案"}},[t._v("#")]),t._v(" 常见的性能优化方案")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[t._v("对于前端应用来说，页面加载耗时、渲染耗时、网络耗时、脚本执行耗时等指标会影响用户的等待时长，\n而 CPU 占用、内存占用、本地缓存占用等可能会导致页面卡顿甚至卡死。\n因此，性能优化可以分别从常见耗时和资源占用两方面来解决。\n")])])]),_("h3",{attrs:{id:"_1-时间角度优化-减少耗时"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-时间角度优化-减少耗时"}},[t._v("#")]),t._v(" ①. 时间角度优化：减少耗时")]),t._v(" "),_("ul",[_("li",[t._v("网络请求，服务端返回 HTML 内容；")]),t._v(" "),_("li",[t._v("浏览器一边解析 HTML，一边进行页面渲染；")]),t._v(" "),_("li",[t._v("解析到外部资源，会发起 HTTP 请求获取，加载 Javascript 代码时会暂停页面渲染；")]),t._v(" "),_("li",[t._v("根据业务代码加载过程，会分别进入页面开始渲染、渲染完成、用户可交互等阶段；")]),t._v(" "),_("li",[t._v("页面交互过程中，会根据业务逻辑进行逻辑运算、页面更新。\n"),_("img",{attrs:{src:a(400),alt:"solar"}}),t._v("\n根据这个过程，我们可以从 4 个方面进行耗时优化：网络请求优化、首屏加载优化、渲染过程优化、计算/逻辑运行提速。")])]),t._v(" "),_("h3",{attrs:{id:"_1-网络请求优化。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-网络请求优化。"}},[t._v("#")]),t._v(" ①. 网络请求优化。")]),t._v(" "),_("ul",[_("li",[t._v("网络请求优化的目标在于减少网络资源的请求和加载耗时，可以参考以下优化方案：")]),t._v(" "),_("li",[_("strong",[t._v("减少 DNS 查询时间")]),t._v("，比如使用浏览器 DNS 缓存、计算机 DNS 缓存、服务器 DNS 缓存")]),t._v(" "),_("li",[_("strong",[t._v("合理地使用 CDN")]),t._v("，有效地减少网络请求耗时；")]),t._v(" "),_("li",[_("strong",[t._v("对请求资源进行缓存")]),t._v("，包括但不限于使用浏览器缓存、HTTP 缓存、后台缓存，比如使用 Service Worker、PWA 等技术；")]),t._v(" "),_("li",[_("strong",[t._v("移除代码中无用的部分")]),t._v("，比如使用 Tree-shaking、代码分割、移除用不上的依赖项等；")]),t._v(" "),_("li",[t._v("对请求资源进行合理的拆分（CSS、Javascript 脚本、图片/音频/视频等），减少请求资源的体积；")]),t._v(" "),_("li",[_("strong",[t._v("对资源进行压缩，减少传输数据大小")]),t._v("；")]),t._v(" "),_("li",[t._v("使用 HTTP/2、HTTP/3，提升资源请求速度；")]),t._v(" "),_("li",[t._v("对请求进行优化，比如对多个请求进行合并，减少通信次数；对请求进行域名拆分，提升并发请求数量\n"),_("img",{attrs:{src:a(401),alt:"solar"}})])]),t._v(" "),_("h2",{attrs:{id:"在请求资源返回后-浏览器会进行解析和加载-这个过程会影响页面的可见时间-通过对首屏加载的优化-可有效地提升用户体验。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#在请求资源返回后-浏览器会进行解析和加载-这个过程会影响页面的可见时间-通过对首屏加载的优化-可有效地提升用户体验。"}},[t._v("#")]),t._v(" 在请求资源返回后，浏览器会进行解析和加载，这个过程会影响页面的可见时间，通过对首屏加载的优化，可有效地提升用户体验。")]),t._v(" "),_("h3",{attrs:{id:"_1-首屏加载优化。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-首屏加载优化。"}},[t._v("#")]),t._v(" ①. 首屏加载优化。")]),t._v(" "),_("p",[t._v("顾名思义，首屏加载优化核心点在于："),_("strong",[t._v("将页面内容尽快展示给用户，减少页面白屏时间。")]),t._v("\n因此，首屏加载优化的方案主要包括两方面：首屏加载耗时优化以及使用页面过渡效果。\n其中，性能和渲染耗时优化属于技术优化手段，可以通过以下方式进行：")]),t._v(" "),_("ul",[_("li",[t._v("对页面进行分片/分屏加载，将页面可见/可交互时间提前；")]),t._v(" "),_("li",[t._v("优化资源加载的顺序和粒度，仅加载需要的资源，通过异步加载方式加载剩余资源；")]),t._v(" "),_("li",[t._v("使用差异化服务，比如读写分离，对于不同场景按需加载所需要的模块；")]),t._v(" "),_("li",[t._v("使用服务端直出渲染，减少页面二次请求和渲染的耗时；")]),t._v(" "),_("li",[t._v("使用秒看技术，通过预览的方式（比如图片）提前将页面内容提供给用户；")]),t._v(" "),_("li",[t._v("配合客户端进行资源预请求和预加载，比如使用预热 Web 容器；")]),t._v(" "),_("li",[t._v("配合客户端将资源和数据进行离线，可用于下一次页面的快速渲染。\n"),_("img",{attrs:{src:a(402),alt:"solar"}}),t._v("\n相比性能和渲染耗时优化，使用页面过渡效果可能更倾向于产品策略。很多时候产品策略的调整，给用户带来的体验优化效果不低于技术手段优化，因此我们也需要重视。常见的方案包括使用骨架屏进行预渲染，以及使用过渡动画让用户感知到页面正在顺利加载，从而避免用户对于白屏页面或是静止页面产生烦躁和困惑。")])]),t._v(" "),_("p",[t._v("除了首屏渲染以外，用户在浏览器页面过程中，也会触发页面的二次运算和渲染，此时需要进行渲染过程的优化。")]),t._v(" "),_("h3",{attrs:{id:"_1-渲染过程优化。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-渲染过程优化。"}},[t._v("#")]),t._v(" ①.  渲染过程优化。")]),t._v(" "),_("p",[_("img",{attrs:{src:a(403),alt:"solar"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);